#Name:     
#Cmdline:  
#Exe:      
#SimulatorVersion:
#Repro:    
#Start:    Wednesday Wed Aug 19 16:30:51 2020
#Elapsed:  0.001726s
{0000000000 -------- scheduler debug} Scheduler is firing interal cycle ZERO
{0000000000 -------- scheduler debug} Clearing all events
{0000000000 -------- scheduler debug} [1;36mscheduling: fire_event[DependencyTest::fire()] at tick: 2 rel_time: 1 group: 11 continuing: true[0;0m
{0000000000 -------- scheduler debug} [1;36mscheduling: Scheduler::stopRunning() at tick: 2 rel_time: 1 group: 0 continuing: true[0;0m
{0000000000 -------- scheduler debug} [0;32m=== SCHEDULER: Next tick boundary 2 ===[0;0m
{0000000000 -------- scheduler debug} Scheduler's event tree for tick: 2
{0000000000 -------- scheduler debug} 	Group[13]: [0;32m[1;32mfire_event[DependencyTest::fire()][0;0m
{0000000000 -------- scheduler debug} 	Group[14]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[15]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[16]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[17]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[18]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[19]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[zero]: [0;32m[0;32mScheduler::stopRunning()[0;0m
{0000000000 -------- scheduler debug} [1;36m--> SCHEDULER: Firing fire_event[DependencyTest::fire()] at time: 2 group: 12[0;0m
{0000000000 -------- scheduler debug} [1;36mscheduling: in_C<DataInPort>[InAndDataOutPort::callback(uint32_t)] at tick: 52 rel_time: 50 group: 13 continuing: true[0;0m
{0000000000 -------- scheduler debug} [1;36mscheduling: in_A<DataInPort>[InAndDataOutPort::callback(uint32_t)] at tick: 52 rel_time: 50 group: 11 continuing: true[0;0m
{0000000000 -------- scheduler debug} [1;36mscheduling: in_X<DataInPort>[InAndDataOutPort::callback(uint32_t)] at tick: 52 rel_time: 50 group: 13 continuing: true[0;0m
{0000000000 -------- scheduler debug} [1;36mscheduling: in_F<DataInPort>[InAndDataOutPort::callback(uint32_t)] at tick: 52 rel_time: 50 group: 14 continuing: true[0;0m
{0000000000 -------- scheduler debug} [1;36mscheduling: in_Y<DataInPort>[InAndDataOutPort::callback(uint32_t)] at tick: 52 rel_time: 50 group: 13 continuing: true[0;0m
{0000000000 -------- scheduler debug} [1;36mscheduling: in_Z<DataInPort>[InAndDataOutPort::callback(uint32_t)] at tick: 52 rel_time: 50 group: 13 continuing: true[0;0m
{0000000000 -------- scheduler debug} [1;36mscheduling: in_B<DataInPort>[InAndDataOutPort::callback(uint32_t)] at tick: 52 rel_time: 50 group: 12 continuing: true[0;0m
{0000000000 -------- scheduler debug} [1;36mscheduling: in_W<DataInPort>[InAndDataOutPort::callback(uint32_t)] at tick: 52 rel_time: 50 group: 12 continuing: true[0;0m
{0000000000 -------- scheduler debug} Scheduler's event tree for tick: 2
{0000000000 -------- scheduler debug} 	Group[zero]: [0;32m[1;32mScheduler::stopRunning()[0;0m
{0000000000 -------- scheduler debug} [1;36m--> SCHEDULER: Firing Scheduler::stopRunning() at time: 2 group: 19[0;0m
{0000000000 -------- scheduler debug} [1;36mscheduling: Scheduler::stopRunning() at tick: 52 rel_time: 49 group: 0 continuing: true[0;0m
{0000000000 -------- scheduler debug} [0;32m=== SCHEDULER: Next tick boundary 52 ===[0;0m
{0000000000 -------- scheduler debug} Scheduler's event tree for tick: 52
{0000000000 -------- scheduler debug} 	Group[13]: [0;32m[1;32min_A<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[14]: [0;32m[0;32min_B<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_W<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[15]: [0;32m[0;32min_C<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_X<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_Y<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_Z<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[16]: [0;32m[0;32min_F<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[17]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[18]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[19]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[zero]: [0;32m[0;32mScheduler::stopRunning()[0;0m
{0000000000 -------- scheduler debug} [1;36m--> SCHEDULER: Firing in_A<DataInPort>[InAndDataOutPort::callback(uint32_t)] at time: 52 group: 12[0;0m
{0000000000 -------- scheduler debug} Scheduler's event tree for tick: 52
{0000000000 -------- scheduler debug} 	Group[14]: [0;32m[1;32min_B<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_W<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[15]: [0;32m[0;32min_C<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_X<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_Y<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_Z<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[16]: [0;32m[0;32min_F<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[17]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[18]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[19]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[zero]: [0;32m[0;32mScheduler::stopRunning()[0;0m
{0000000000 -------- scheduler debug} [1;36m--> SCHEDULER: Firing in_B<DataInPort>[InAndDataOutPort::callback(uint32_t)] at time: 52 group: 13[0;0m
{0000000000 -------- scheduler debug} Scheduler's event tree for tick: 52
{0000000000 -------- scheduler debug} 	Group[14]: [0;32m[0;32min_B<DataInPort>[InAndDataOutPort::callback(uint32_t)], [1;32min_W<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[15]: [0;32m[0;32min_C<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_X<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_Y<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_Z<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[16]: [0;32m[0;32min_F<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[17]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[18]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[19]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[zero]: [0;32m[0;32mScheduler::stopRunning()[0;0m
{0000000000 -------- scheduler debug} [1;36m--> SCHEDULER: Firing in_W<DataInPort>[InAndDataOutPort::callback(uint32_t)] at time: 52 group: 13[0;0m
{0000000000 -------- scheduler debug} Scheduler's event tree for tick: 52
{0000000000 -------- scheduler debug} 	Group[15]: [0;32m[1;32min_C<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_X<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_Y<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_Z<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[16]: [0;32m[0;32min_F<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[17]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[18]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[19]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[zero]: [0;32m[0;32mScheduler::stopRunning()[0;0m
{0000000000 -------- scheduler debug} [1;36m--> SCHEDULER: Firing in_C<DataInPort>[InAndDataOutPort::callback(uint32_t)] at time: 52 group: 14[0;0m
{0000000000 -------- scheduler debug} Scheduler's event tree for tick: 52
{0000000000 -------- scheduler debug} 	Group[15]: [0;32m[0;32min_C<DataInPort>[InAndDataOutPort::callback(uint32_t)], [1;32min_X<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_Y<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_Z<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[16]: [0;32m[0;32min_F<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[17]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[18]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[19]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[zero]: [0;32m[0;32mScheduler::stopRunning()[0;0m
{0000000000 -------- scheduler debug} [1;36m--> SCHEDULER: Firing in_X<DataInPort>[InAndDataOutPort::callback(uint32_t)] at time: 52 group: 14[0;0m
{0000000000 -------- scheduler debug} Scheduler's event tree for tick: 52
{0000000000 -------- scheduler debug} 	Group[15]: [0;32m[0;32min_C<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_X<DataInPort>[InAndDataOutPort::callback(uint32_t)], [1;32min_Y<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_Z<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[16]: [0;32m[0;32min_F<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[17]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[18]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[19]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[zero]: [0;32m[0;32mScheduler::stopRunning()[0;0m
{0000000000 -------- scheduler debug} [1;36m--> SCHEDULER: Firing in_Y<DataInPort>[InAndDataOutPort::callback(uint32_t)] at time: 52 group: 14[0;0m
{0000000000 -------- scheduler debug} Scheduler's event tree for tick: 52
{0000000000 -------- scheduler debug} 	Group[15]: [0;32m[0;32min_C<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_X<DataInPort>[InAndDataOutPort::callback(uint32_t)], [0;32min_Y<DataInPort>[InAndDataOutPort::callback(uint32_t)], [1;32min_Z<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[16]: [0;32m[0;32min_F<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[17]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[18]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[19]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[zero]: [0;32m[0;32mScheduler::stopRunning()[0;0m
{0000000000 -------- scheduler debug} [1;36m--> SCHEDULER: Firing in_Z<DataInPort>[InAndDataOutPort::callback(uint32_t)] at time: 52 group: 14[0;0m
{0000000000 -------- scheduler debug} Scheduler's event tree for tick: 52
{0000000000 -------- scheduler debug} 	Group[16]: [0;32m[1;32min_F<DataInPort>[InAndDataOutPort::callback(uint32_t)][0;0m
{0000000000 -------- scheduler debug} 	Group[17]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[18]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[19]: [0;32m[0;0m
{0000000000 -------- scheduler debug} 	Group[zero]: [0;32m[0;32mScheduler::stopRunning()[0;0m
{0000000000 -------- scheduler debug} [1;36m--> SCHEDULER: Firing in_F<DataInPort>[InAndDataOutPort::callback(uint32_t)] at time: 52 group: 15[0;0m
{0000000000 -------- scheduler debug} Scheduler's event tree for tick: 52
{0000000000 -------- scheduler debug} 	Group[zero]: [0;32m[1;32mScheduler::stopRunning()[0;0m
{0000000000 -------- scheduler debug} [1;36m--> SCHEDULER: Firing Scheduler::stopRunning() at time: 52 group: 19[0;0m
{0000000000 -------- scheduler debug} [0;32m=== SCHEDULER: No more continuing events queued. Halting at 52. Latest continuing event was at 52, next tick = none ===[0;0m
